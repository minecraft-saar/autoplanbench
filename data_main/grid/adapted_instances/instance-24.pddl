(define (problem grid-3-3-3-3-3)
    (:domain grid)
    (:objects
    object_0 object_1 object_2 object_3 object_4 object_5 object_6 object_7 object_8
    object_9 object_10 object_11
    object_12 object_13 object_14
    )

    (:init
       (arm-empty)

       (place object_0)
       (place object_1)
       (place object_2)
       (place object_3)
       (place object_4)
       (place object_5)
       (place object_6)
       (place object_7)
       (place object_8)
       (shape object_9)
       (shape object_10)
       (shape object_11)
       (key object_12)
       (key object_13)
       (key object_14)

       (conn object_0 object_3)
       (conn object_0 object_1)
       (conn object_1 object_4)
       (conn object_1 object_2)
       (conn object_1 object_0)
       (conn object_2 object_5)
       (conn object_2 object_1)
       (conn object_3 object_6)
       (conn object_3 object_4)
       (conn object_3 object_0)
       (conn object_4 object_7)
       (conn object_4 object_5)
       (conn object_4 object_1)
       (conn object_4 object_3)
       (conn object_5 object_8)
       (conn object_5 object_2)
       (conn object_5 object_4)
       (conn object_6 object_7)
       (conn object_6 object_3)
       (conn object_7 object_8)
       (conn object_7 object_4)
       (conn object_7 object_6)
       (conn object_8 object_5)
       (conn object_8 object_7)
       (locked object_8)
       (locked object_0)
       (locked object_3)
       (lock-shape  object_8 object_9)
       (lock-shape  object_0 object_10)
       (lock-shape  object_3 object_11)
       (open object_1)
       (open object_2)
       (open object_4)
       (open object_5)
       (open object_6)
       (open object_7)

       (key-shape  object_12 object_9)
       (key-shape  object_13 object_10)
       (key-shape  object_14 object_11)
       (at object_12 object_1)
       (at object_13 object_7)
       (at object_14 object_2)
       (at-robot object_7)
    )

    (:goal (and
       (at object_14 object_4)
    )))
    
