(define (problem grid-4-2-2-4-3)
    (:domain grid)
    (:objects
    object_0 object_1 object_2 object_3 object_4 object_5 object_6 object_7
    object_8 object_9
    object_10 object_11 object_12 object_13
    )

    (:init
       (arm-empty)

       (place object_0)
       (place object_1)
       (place object_2)
       (place object_3)
       (place object_4)
       (place object_5)
       (place object_6)
       (place object_7)
       (shape object_8)
       (shape object_9)
       (key object_10)
       (key object_11)
       (key object_12)
       (key object_13)

       (conn object_0 object_2)
       (conn object_0 object_1)
       (conn object_1 object_3)
       (conn object_1 object_0)
       (conn object_2 object_4)
       (conn object_2 object_3)
       (conn object_2 object_0)
       (conn object_3 object_5)
       (conn object_3 object_1)
       (conn object_3 object_2)
       (conn object_4 object_6)
       (conn object_4 object_5)
       (conn object_4 object_2)
       (conn object_5 object_7)
       (conn object_5 object_3)
       (conn object_5 object_4)
       (conn object_6 object_7)
       (conn object_6 object_4)
       (conn object_7 object_5)
       (conn object_7 object_6)
       (locked object_1)
       (locked object_0)
       (locked object_5)
       (lock-shape  object_1 object_8)
       (lock-shape  object_0 object_9)
       (lock-shape  object_5 object_8)
       (open object_2)
       (open object_3)
       (open object_4)
       (open object_6)
       (open object_7)

       (key-shape  object_10 object_8)
       (key-shape  object_11 object_9)
       (key-shape  object_12 object_8)
       (key-shape  object_13 object_8)
       (at object_10 object_6)
       (at object_11 object_3)
       (at object_12 object_0)
       (at object_13 object_4)
       (at-robot object_4)
    )

    (:goal (and
       (at object_10 object_1)
       (at object_11 object_0)
       (at object_12 object_6)
       (at object_13 object_5)
    )))
    
