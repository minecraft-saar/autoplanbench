{
    "action_mappings": {
        "move": "apply the action \"move\" to robot {}, room {} and room {}",
        "pick": "apply the action \"pick\" to robot {}, object {}, room {} and gripper {}",
        "drop": "apply the action \"drop\" to robot {}, object {}, room {} and gripper {}"
    },
    "action_mappings_indef": {
        "move": "apply the action \"move\" to a robot {}, a room {} and a room {}",
        "pick": "apply the action \"pick\" to a robot {}, an object {}, a room {} and a gripper {}",
        "drop": "apply the action \"drop\" to a robot {}, an object {}, a room {} and a gripper {}"
    },
    "predicate_mappings": {
        "at-robby": "{} and {} are in the relation \"at-robby\"",
        "at": "{} and {} are in the relation \"at\"",
        "free": "{} and {} are in the relation \"free\"",
        "carry": "{}, {} and {} are in the relation \"carry\"",
        "=": "{} and {} are in the relation \"=\"",
        "!=": "{} and {} are in the relation \"!=\""
    },
    "actions": {
        "move": {
            "annotation": "",
            "parameter_types": {
                "?r": "robot",
                "?from": "room",
                "?to": "room"
            },
            "pddl": "(move ?r ?from ?to)",
            "description": "apply the action \"move\" to a robot A, a room B and a room C",
            "preconditions": [
                "I can only apply the action \"move\" to a robot A, a room B and a room C if it is the case that A and B are in the relation \"at-robby\""
            ],
            "effects": [
                "Once I apply the action \"move\" to a robot A, a room B and a room C, it is the case that A and C are in the relation \"at-robby\"",
                "Once I apply the action \"move\" to a robot A, a room B and a room C, it is not the case anymore that A and B are in the relation \"at-robby\""
            ]
        },
        "pick": {
            "annotation": "",
            "parameter_types": {
                "?r": "robot",
                "?obj": "object",
                "?room": "room",
                "?g": "gripper"
            },
            "pddl": "(pick ?r ?obj ?room ?g)",
            "description": "apply the action \"pick\" to a robot A, an object B, a room C and a gripper D",
            "preconditions": [
                "I can only apply the action \"pick\" to a robot A, an object B, a room C and a gripper D if it is the case that B and C are in the relation \"at\" and A and C are in the relation \"at-robby\" and A and D are in the relation \"free\""
            ],
            "effects": [
                "Once I apply the action \"pick\" to a robot A, an object B, a room C and a gripper D, it is the case that A, B and D are in the relation \"carry\"",
                "Once I apply the action \"pick\" to a robot A, an object B, a room C and a gripper D, it is not the case anymore that B and C are in the relation \"at\" and it is not the case anymore that A and D are in the relation \"free\""
            ]
        },
        "drop": {
            "annotation": "",
            "parameter_types": {
                "?r": "robot",
                "?obj": "object",
                "?room": "room",
                "?g": "gripper"
            },
            "pddl": "(drop ?r ?obj ?room ?g)",
            "description": "apply the action \"drop\" to a robot A, an object B, a room C and a gripper D",
            "preconditions": [
                "I can only apply the action \"drop\" to a robot A, an object B, a room C and a gripper D if it is the case that A, B and D are in the relation \"carry\" and A and C are in the relation \"at-robby\""
            ],
            "effects": [
                "Once I apply the action \"drop\" to a robot A, an object B, a room C and a gripper D, it is the case that B and C are in the relation \"at\" and A and D are in the relation \"free\"",
                "Once I apply the action \"drop\" to a robot A, an object B, a room C and a gripper D, it is not the case anymore that A, B and D are in the relation \"carry\""
            ]
        }
    },
    "predicates": {
        "at-robby": {
            "parameter_types": {
                "?r": "robot",
                "?x": "room"
            },
            "pddl": "(at-robby ?r ?x)"
        },
        "at": {
            "parameter_types": {
                "?o": "object",
                "?x": "room"
            },
            "pddl": "(at ?o ?x)"
        },
        "free": {
            "parameter_types": {
                "?r": "robot",
                "?g": "gripper"
            },
            "pddl": "(free ?r ?g)"
        },
        "carry": {
            "parameter_types": {
                "?r": "robot",
                "?o": "object",
                "?g": "gripper"
            },
            "pddl": "(carry ?r ?o ?g)"
        },
        "=": {
            "parameter_types": {
                "?x1": "object",
                "?x2": "object"
            },
            "pddl": "(= ?x1 ?x2)"
        },
        "!=": {
            "parameter_types": {
                "?x1": "object",
                "?x2": "object"
            },
            "pddl": "(!= ?x1 ?x2)"
        }
    },
    "action_nl_templates": {
        "move": "apply the action \"move\" to robot {?r}, room {?from} and room {?to}",
        "pick": "apply the action \"pick\" to robot {?r}, object {?obj}, room {?room} and gripper {?g}",
        "drop": "apply the action \"drop\" to robot {?r}, object {?obj}, room {?room} and gripper {?g}"
    },
    "predicate_nl_templates": {
        "at-robby": "{?r} and {?x} are in the relation \"at-robby\"",
        "at": "{?o} and {?x} are in the relation \"at\"",
        "free": "{?r} and {?g} are in the relation \"free\"",
        "carry": "{?r}, {?o} and {?g} are in the relation \"carry\"",
        "=": "{?x1} and {?x2} are in the relation \"=\"",
        "!=": "{?x1} and {?x2} are in the relation \"!=\""
    },
    "action_nl_templates_indef": {
        "move": "apply the action \"move\" to a robot {?r}, a room {?from} and a room {?to}",
        "pick": "apply the action \"pick\" to a robot {?r}, an object {?obj}, a room {?room} and a gripper {?g}",
        "drop": "apply the action \"drop\" to a robot {?r}, an object {?obj}, a room {?room} and a gripper {?g}"
    },
    "type_hierarchy": [
        "Everything that is a room or a robot or a gripper is also a object"
    ]
}