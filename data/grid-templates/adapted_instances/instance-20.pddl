(define (problem grid-4-2-2-4-3)
    (:domain grid)
    (:objects
    object_0 object_3 object_10 object_11 object_12 object_1 object_9 object_6
    object_7 object_4
    object_8 object_2 object_13 object_5
    )

    (:init
       (arm-empty)

       (place object_0)
       (place object_3)
       (place object_10)
       (place object_11)
       (place object_12)
       (place object_1)
       (place object_9)
       (place object_6)
       (shape object_7)
       (shape object_4)
       (key object_8)
       (key object_2)
       (key object_13)
       (key object_5)

       (conn object_0 object_10)
       (conn object_0 object_3)
       (conn object_3 object_11)
       (conn object_3 object_0)
       (conn object_10 object_12)
       (conn object_10 object_11)
       (conn object_10 object_0)
       (conn object_11 object_1)
       (conn object_11 object_3)
       (conn object_11 object_10)
       (conn object_12 object_9)
       (conn object_12 object_1)
       (conn object_12 object_10)
       (conn object_1 object_6)
       (conn object_1 object_11)
       (conn object_1 object_12)
       (conn object_9 object_6)
       (conn object_9 object_12)
       (conn object_6 object_1)
       (conn object_6 object_9)
       (locked object_3)
       (locked object_0)
       (locked object_1)
       (lock-shape  object_3 object_7)
       (lock-shape  object_0 object_4)
       (lock-shape  object_1 object_7)
       (open object_10)
       (open object_11)
       (open object_12)
       (open object_9)
       (open object_6)

       (key-shape  object_8 object_7)
       (key-shape  object_2 object_4)
       (key-shape  object_13 object_7)
       (key-shape  object_5 object_7)
       (at object_8 object_9)
       (at object_2 object_11)
       (at object_13 object_0)
       (at object_5 object_12)
       (at-robot object_12)
    )

    (:goal (and
       (at object_8 object_3)
       (at object_2 object_0)
       (at object_13 object_9)
       (at object_5 object_1)
    )))
    
