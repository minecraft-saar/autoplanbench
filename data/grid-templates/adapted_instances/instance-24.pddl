(define (problem grid-3-3-3-3-3)
    (:domain grid)
    (:objects
    object_7 object_3 object_5 object_0 object_1 object_6 object_9 object_12 object_10
    object_11 object_13 object_2
    object_8 object_14 object_4
    )

    (:init
       (arm-empty)

       (place object_7)
       (place object_3)
       (place object_5)
       (place object_0)
       (place object_1)
       (place object_6)
       (place object_9)
       (place object_12)
       (place object_10)
       (shape object_11)
       (shape object_13)
       (shape object_2)
       (key object_8)
       (key object_14)
       (key object_4)

       (conn object_7 object_0)
       (conn object_7 object_3)
       (conn object_3 object_1)
       (conn object_3 object_5)
       (conn object_3 object_7)
       (conn object_5 object_6)
       (conn object_5 object_3)
       (conn object_0 object_9)
       (conn object_0 object_1)
       (conn object_0 object_7)
       (conn object_1 object_12)
       (conn object_1 object_6)
       (conn object_1 object_3)
       (conn object_1 object_0)
       (conn object_6 object_10)
       (conn object_6 object_5)
       (conn object_6 object_1)
       (conn object_9 object_12)
       (conn object_9 object_0)
       (conn object_12 object_10)
       (conn object_12 object_1)
       (conn object_12 object_9)
       (conn object_10 object_6)
       (conn object_10 object_12)
       (locked object_10)
       (locked object_7)
       (locked object_0)
       (lock-shape  object_10 object_11)
       (lock-shape  object_7 object_13)
       (lock-shape  object_0 object_2)
       (open object_3)
       (open object_5)
       (open object_1)
       (open object_6)
       (open object_9)
       (open object_12)

       (key-shape  object_8 object_11)
       (key-shape  object_14 object_13)
       (key-shape  object_4 object_2)
       (at object_8 object_3)
       (at object_14 object_12)
       (at object_4 object_5)
       (at-robot object_12)
    )

    (:goal (and
       (at object_4 object_1)
    )))
    
